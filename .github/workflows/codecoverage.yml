name: Code Coverage Report

on:
  workflow_dispatch:
    inputs:
      seed:
        description: 'Enter an integer value between 0 and 2147483647.'
        type: number
        required: true
        default: 0

env:
  seed: ${{ inputs.seed || github.run_number }}

jobs:
  code-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
      - run: dotnet build -c Release

      - name: Enable diagnostics (It's disabled by `Cysharp/Actions/.github/actions/setup-dotnet`)
        run: echo "COMPlus_EnableDiagnostics=1" >> $GITHUB_ENV

      - name: Install `dotnet-coverage` command
        run: dotnet tool install -g dotnet-coverage

      - name: Collect code coverage
        shell: pwsh
        working-directory: tests
        run: |
          $PSNativeCommandUseErrorActionPreference = $true
          $sessionId = 'ZLinq'

          dotnet coverage collect --session-id $sessionId --nologo --settings codecoverage.runsettings --server-mode --background
          try 
          {
            dotnet coverage connect $sessionId --nologo "dotnet test ../ -c Release --no-build"
          }
          finally 
          {
            dotnet coverage shutdown $sessionId --nologo --timeout 60000
          }

      - name: Generate code coverage reports
        uses: danielpalme/ReportGenerator-GitHub-Action@f1927db1dbfc029b056583ee488832e939447fe6 # v5.4.4
        with:
          reports: 'tests/TestResults/coverage.cobertura.xml'
          targetdir: 'tests/TestResults/CoverageReports'
          reporttypes: 'HtmlInline;MarkdownSummaryGithub'
          tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport      
          path: tests/TestResults/CoverageReports
    
      - name: Write coverage results to build summary
        shell: bash
        run: cat tests/TestResults/CoverageReports/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
