name: Build-Debug

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
      - run: dotnet build -c Debug
      - run: dotnet test -c Debug --no-build

  code-coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: Cysharp/Actions/.github/actions/setup-dotnet@main
      - run: dotnet build -c Release

      - name: Enable diagnostics (It's disabled by `Cysharp/Actions/.github/actions/setup-dotnet`)
        run: echo "COMPlus_EnableDiagnostics=1" >> $GITHUB_ENV

      - name: Install `dotnet-coverage` command
        run: dotnet tool install -g dotnet-coverage

      - name: Collect code coverage
        shell: pwsh
        working-directory: tests
        run: |
          $PSNativeCommandUseErrorActionPreference = $true
          $sessionId = 'ZLinq'

          dotnet coverage collect --session-id $sessionId --nologo --settings codecoverage.runsettings --server-mode --background
          try 
          {
            dotnet coverage connect $sessionId --nologo "dotnet test ../ -c Release --no-build"
          }
          finally 
          {
            dotnet coverage shutdown $sessionId --nologo --timeout 60000
          }

      - uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        with:
          fail_ci_if_error: false
          files: tests/TestResults/coverage.cobertura.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
